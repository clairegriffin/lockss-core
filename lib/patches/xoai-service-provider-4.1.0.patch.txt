diff -Naur xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/handler/ListRecordHandler.java xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/handler/ListRecordHandler.java
--- xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/handler/ListRecordHandler.java	2014-08-01 18:06:34.000000000 -0400
+++ xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/handler/ListRecordHandler.java	2016-03-09 12:08:27.000000000 -0500
@@ -47,6 +47,7 @@
 import com.lyncode.xoai.serviceprovider.parsers.ListRecordsParser;
 
 public class ListRecordHandler implements Source<Record> {
+	private static final int DEFAULT_RETRIES = 5;
     private Context context;
     private ListRecordsParameters parameters;
     private OAIClient client;
@@ -58,50 +59,64 @@
         this.parameters = parameters;
         this.client = context.getClient();
     }
-
-    @Override
+    
     public List<Record> nextIteration() {
+    	int retries = DEFAULT_RETRIES;
+    	while(retries > 0) {
+	    	try {
+	    		return getNextIteration();
+	    	} catch (XmlReaderException e) {
+	    		if(retries > 0) {
+	    			retries = retries - 1;
+	    		} else {
+	    			throw new InvalidOAIResponse(e);
+	    		}
+	        } catch (OAIRequestException e) {
+	        	if(retries > 0) {
+	    			retries = retries - 1;
+	    		} else {
+	    			throw new InvalidOAIResponse(e);
+	    		}
+	        } catch (IOException e) {
+	        	throw new InvalidOAIResponse(e);
+			}
+    	}
+    	throw new InvalidOAIResponse("Failed on reties in a way that should not happen");
+    }
+    
+    private List<Record> getNextIteration() throws OAIRequestException, XmlReaderException, IOException {
     	//TODO - refactor - this and ListIdentifierHandler are pretty similar.
         List<Record> records = new ArrayList<Record>();
-        try {
-            InputStream stream = null;
-            if (resumptionToken == null) { // First call
-                stream = client.execute(parameters()
-                        .withVerb(ListRecords)
-                        .include(parameters));
-            } else { // Resumption calls
-                stream = client.execute(parameters()
-                        .withVerb(ListRecords)
-                        .include(parameters)
-                        .withResumptionToken(resumptionToken));
-            }
-
-            XmlReader reader = new XmlReader(stream);
-            ListRecordsParser parser = new ListRecordsParser(reader,
-                    context, parameters.getMetadataPrefix());
-            while (parser.hasNext())
-                records.add(parser.next());
-
-            if (reader.current(resumptionToken())) {
-                if (reader.next(text(), anEndElement()).current(text())) {
-                    String text = reader.getText();
-                    if (text == null || "".equals(text.trim()))
-                        ended = true;
-                    else
-                        resumptionToken = text;
-                } else ended = true;
-            } else ended = true;
-			
-            stream.close();
-            return records;
-        } catch (XmlReaderException e) {
-            throw new InvalidOAIResponse(e);
-        } catch (OAIRequestException e) {
-            throw new InvalidOAIResponse(e);
+        InputStream stream = null;
+        if (resumptionToken == null) { // First call
+        	stream = client.execute(parameters()
+        			.withVerb(ListRecords)
+        			.include(parameters));
+        } else { // Resumption calls
+        	stream = client.execute(parameters()
+        			.withVerb(ListRecords)
+        			.include(parameters)
+        			.withResumptionToken(resumptionToken));
         }
-        catch (IOException e) {
-        	throw new InvalidOAIResponse(e);
-		}
+
+        XmlReader reader = new XmlReader(stream);
+        ListRecordsParser parser = new ListRecordsParser(reader,
+        		context, parameters.getMetadataPrefix());
+        while (parser.hasNext())
+        	records.add(parser.next());
+
+        if (reader.current(resumptionToken())) {
+        	if (reader.next(text(), anEndElement()).current(text())) {
+        		String text = reader.getText();
+        		if (text == null || "".equals(text.trim()) || text.equals(resumptionToken))
+        			ended = true;
+        		else
+        			resumptionToken = text;
+        	} else ended = true;
+        } else ended = true;
+
+        stream.close();
+        return records;
     }
 
     private Matcher<XMLEvent> resumptionToken() {
diff -Naur xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/lazy/ItemIterator.java xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/lazy/ItemIterator.java
--- xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/lazy/ItemIterator.java	2014-08-01 18:06:34.000000000 -0400
+++ xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/lazy/ItemIterator.java	2016-03-09 09:27:26.000000000 -0500
@@ -37,7 +37,8 @@
         else {
             if (source.endReached()) return false;
             else {
-                items.addAll(source.nextIteration());
+                items = source.nextIteration();
+                position = 0;
                 return hasNext();
             }
         }
diff -Naur xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParser.java xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParser.java
--- xoai-xoai-4.1.0.orig/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParser.java	2014-08-01 18:06:34.000000000 -0400
+++ xoai-xoai-4.1.0/xoai-service-provider/src/main/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParser.java	2015-04-06 12:29:46.000000000 -0400
@@ -53,7 +53,7 @@
 
     private Element parseElement(XmlReader reader) throws XmlReaderException {
         Element element = new Element(reader.getAttributeValue(name()));
-        while (reader.next(startElement(), startField(), endOfMetadata()).current(startElement())) {
+        while (reader.next(startElement(), startField(), endOfMetadata(), endElement()).current(startElement())) {
             element.withElement(parseElement(reader));
         }
 
diff -Naur xoai-xoai-4.1.0.orig/xoai-service-provider/src/test/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParserTest.java xoai-xoai-4.1.0/xoai-service-provider/src/test/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParserTest.java
--- xoai-xoai-4.1.0.orig/xoai-service-provider/src/test/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParserTest.java	2014-08-01 18:06:34.000000000 -0400
+++ xoai-xoai-4.1.0/xoai-service-provider/src/test/java/com/lyncode/xoai/serviceprovider/parsers/MetadataParserTest.java	2015-04-06 12:23:12.000000000 -0400
@@ -19,6 +19,7 @@
         MetadataSearch<String> searcher = metadata.searcher();
         assertThat(metadata.getElements().size(), equalTo(1));
         assertThat(searcher.findOne("dc.creator"), equalTo("Sousa, Jesus Maria Angélica Fernandes"));
+        assertThat(searcher.findOne("dc.date.submitted"), equalTo("1995"));
         assertThat(searcher.findAll("dc.subject").size(), equalTo(5));
     }
     
diff -Naur xoai-xoai-4.1.0.orig/xoai-service-provider/src/test/resources/test/xoai.xml xoai-xoai-4.1.0/xoai-service-provider/src/test/resources/test/xoai.xml
--- xoai-xoai-4.1.0.orig/xoai-service-provider/src/test/resources/test/xoai.xml	2014-08-01 18:06:34.000000000 -0400
+++ xoai-xoai-4.1.0/xoai-service-provider/src/test/resources/test/xoai.xml	2015-04-10 06:50:32.000000000 -0400
@@ -4,7 +4,9 @@
             <field name="value">Sousa, Jesus Maria Angélica Fernandes</field>
         </element>
         <element name="date">
-            <field name="value">1995</field>
+	    	<element name="submitted">
+            	<field name="value">1995</field>
+	    	</element>
         </element>
         <element name="identifier">
             <field name="value">http://www.rcaap.pt/detail.jsp?id=oai:digituma.uma.pt:10400.13/9</field>
@@ -46,4 +48,4 @@
             <field name="value">info:eu-repo/semantics/doctoralThesis</field>
         </element>
     </element>
-</metadata>
\ No newline at end of file
+</metadata>